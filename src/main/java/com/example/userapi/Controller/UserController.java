package com.example.userapi.Controller;

import com.example.userapi.Model.User;
import com.example.userapi.Repository.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

@Controller // This means that this class is a Controller
@RequestMapping(value = "/api/v1") // This means URL's start with /api/v1 (after Application path)
public class UserController {

    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;

    @PostMapping(path = "/add") // Map ONLY POST Requests
    public @ResponseBody
    String addNewUser(@RequestParam String name
            , @RequestParam String email) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        User n = new User();
        n.setFirst_name(name);
        n.setEmail(email);
        userRepository.save(n);
        return "Saved";
    }

    @GetMapping(path = "/users")
    public @ResponseBody
    Iterable<User> getAllUsers() {
        // This returns a JSON or XML with the users
        return userRepository.findAll();
    }

    @GetMapping(path = "/users/{id}")
    public @ResponseBody
    User getUserById(@PathVariable int  id){
        return userRepository.findById(id).orElse(null);
    }

    @DeleteMapping(path = "/delete/{id}")
    public void deleteUserById(@PathVariable int id){
        userRepository.deleteById(id);
    }
}


